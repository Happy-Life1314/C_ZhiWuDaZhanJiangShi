/*
* 开发日记
* 1.创建新项目（空项目模板）使用VS的任意版本
* 2.导入素材
* 3.实现最开始的游戏场景
* 4.实现游戏顶部的工具栏
* 5.实现工具栏中的植物开牌
*/

#include<stdio.h>
#include<graphics.h> //easyx图形库的头文件，需要安装
#include"tools.h"

#define WIN_WIDTH 900
#define WIN_HEIGHT 600

enum {WAN_DOU,XIANG_RI_KUI,ZHI_WU_COUNT};

IMAGE imgBg;//表示背景图片
IMAGE imgBar;//工具栏
IMAGE imgCards[ZHI_WU_COUNT];//植物卡牌
IMAGE* imgZhiWu[ZHI_WU_COUNT][20];

int curX, curY;//当前选中的植物，在移动过程中的位置
int curZhiWu;//0：没有选中，1：选择了第一种植物

bool fileExist(const char* name) {
	FILE* fp = fopen(name, "r");
	if (fp == NULL) {
		return false;
	}
	else {
		fclose(fp);
		return true;
	}
}

void gameInit()
{
	//加载有背景图片
	//把字符集修改为“多字节字符集”
	loadimage(&imgBg, "res/bg.jpg");
	loadimage(&imgBar, "res/bar5.png");

	memset(imgZhiWu, 0, sizeof(imgZhiWu));
	
	//初始化植物卡牌
	/*sprintf_s函数的工作方式类似于printf函数，但是它将结果写入指定的字符数组中，
	而不是输出到标准输出流。它可以用于构建动态生成的字符串，
	例如生成文件名、日志消息等。*/
	char name[64];
	for (int i = 0; i < ZHI_WU_COUNT; i++)
	{
		//生成植物卡牌的文件名
		sprintf_s(name, sizeof(name), "res/Cards/card_%d.png", i + 1);
		loadimage(&imgCards[i], name);

		for (int j = 0; j < 20; j++) {
			sprintf_s(name, sizeof(name), "res/zhiwu/%d/%d.png", i, j + 1);
			//先判断这个文件是否存在
			if (fileExist(name)) {
				imgZhiWu[i][j] = new IMAGE;
				loadimage(imgZhiWu[i][j], name);
			}
			else {
				break;
			}
		}
	}
	curZhiWu = 0;
	//创建游戏的图形窗口
	initgraph(WIN_WIDTH,WIN_HEIGHT,1);
}

void updateWindow()//更新图片
{
	BeginBatchDraw();//开始缓冲

	putimage(0, 0, &imgBg);//把一个图片渲染显示出来
	//putimage(250, 0, &imgBar);
	putimagePNG(250, 0, &imgBar);

	for (int i = 0; i < ZHI_WU_COUNT; i++)
	{
		int x = 338 + i * 65;
		int y = 6; 
		putimage(x, y, &imgCards[i]);
	}

	//渲染，拖动过程中的植物
	if (curZhiWu > 0) {
		IMAGE* img = imgZhiWu[curZhiWu - 1][0];
		putimagePNG(curX - img->getwidth()/2,curY-img->getheight()/2,img);
	}

	EndBatchDraw();//结束缓冲
}

void userClick(){
	ExMessage msg;
	static int status = 0;
	if (peekmessage(&msg)) {
		if (msg.message == WM_LBUTTONDOWN) {
			if (msg.x > 338 && msg.x < 338 + 65 * ZHI_WU_COUNT && msg.y < 96) {
				int index = (msg.x - 338) / 65;
				//printf("%d\n", index);
				status = 1;
				curZhiWu = index + 1;
			}
		}
		else if (msg.message == WM_MOUSEMOVE && status == 1) {
			curX = msg.x;
			curY = msg.y;
			
		}
		else if (msg.message == WM_LBUTTONUP) {

		}
	}
}

int main()
{
	gameInit();
	while (1)
	{
		userClick();

		updateWindow();

	}

	system("pause");
	return 0;
}
